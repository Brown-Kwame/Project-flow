# Server Port Configuration
server.port=8080

# PostgreSQL Database Configuration
# Database connection URL
spring.datasource.url=jdbc:postgresql://localhost:5432/skype_clone_db
# Username from docker-compose.yml
spring.datasource.username=skypeuser
# Password from docker-compose.yml
spring.datasource.password=skypepassword

# JPA/Hibernate Configuration
# IMPORTANT: 'update' automatically updates the DB schema based on your entities.
# 'create' drops and recreates (data loss!), 'validate' checks, 'none' does nothing.
# Use 'update' for development, 'validate' or 'none' for production with migrations.
spring.jpa.hibernate.ddl-auto=update
# Shows SQL queries in the console (good for debugging)
spring.jpa.show-sql=true
# Formats the SQL nicely
spring.jpa.properties.hibernate.format_sql=true
# Specifies PostgreSQL dialect for Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# For file uploads (we'll need this later for Feature 4: File Sharing)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Application specific properties (we can add more later)
# IMPORTANT: You should generate a NEW, UNIQUE, and TRULY RANDOM secret for app.jwtSecret.
# The one below is just for demonstration. Do not use this in any real scenario.
# REPLACE THIS WITH A REAL SECRET!
app.jwtSecret=e4f5c69b9c8f10e0af48aa2dbb1b1efc20a1e9dc4cf6d684735569f858b086c36e847f0845e79fba67a6e94239c6e66e7ec7633498c4b52454f6607b07b1384f
# 24 hours in milliseconds
app.jwtExpirationMs=86400000

# Base URL for the application (used for constructing full URLs)
# Can be overridden by environment variable APP_BASE_URL
app.baseUrl=http://192.168.0.151:8080