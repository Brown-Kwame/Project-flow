

server:
  port: 8094

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: false
      webflux: 
        cors:
          filter:
            cors-configurations:
              '[/**]': 
                allowed-origins:
                  - "http://localhost:19000" 
                  - "http://localhost:8081" 
                  - "http://localhost:3000"  
                allowed-methods:
                  - "GET"
                  - "POST"
                  - "PUT"
                  - "DELETE"
                  - "OPTIONS"
                allowed-headers:
                  - "*" # Allow all headers, including Authorization for JWT
                allow-credentials: true # Allow sending cookies and HTTP authentication headers
                max-age: 3600 

      routes:
        # Route for User Service
        - id: user-service
          uri: lb://USER-SERVICE 
          predicates:
            - Path=/users/** 
          filters:
            - RewritePath=/users/(?<segment>.*), /users/${segment} 

        # Route for Notification Service
        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/notifications/**
          filters:
            - RewritePath=/notifications/(?<segment>.*), /notifications/${segment}

        # Route for Task Service
        - id: task-service
          uri: lb://TASK-SERVICE
          predicates:
            - Path=/tasks/**
          filters:
            - RewritePath=/tasks/(?<segment>.*), /tasks/${segment}

        # Route for Project Service
        - id: project-service
          uri: lb://PROJECT-SERVICE
          predicates:
            - Path=/projects/**
          filters:
            - RewritePath=/projects/(?<segment>.*), /projects/${segment}

        # Route for Goals Service
        - id: goals-service
          uri: lb://GOALS-SERVICE
          predicates:
            - Path=/goals/**
          filters:
            - RewritePath=/goals/(?<segment>.*), /goals/${segment}
          
        - id: auth-service # Unique ID for this route
          uri: lb://AUTH-SERVICE # This MUST match the Auth Service's spring.application.name
          predicates:
            - Path=/auth/** # All requests starting with /auth will go to Auth Service
          filters:
            - RewritePath=/auth/(?<segment>.*), /auth/${segment}

            # NEW ROUTE FOR PORTFOLIO SERVICE
        - id: portfolio-service # Unique ID for this route
          uri: lb://PORTFOLIO-SERVICE # This MUST match the Portfolio Service's spring.application.name
          predicates:
            - Path=/portfolios/** # All requests starting with /portfolios will go to Portfolio Service
          filters:
            - RewritePath=/portfolios/(?<segment>.*), /portfolios/${segment}

        - id: chat-service
          uri: lb://CHAT-SERVICE # 'lb://' indicates load balancing via Eureka
          predicates:
            - Path=/api/chat/** # REST endpoints for chat (e.g., /api/chat/send, /api/chat/history)
          filters:
            - RewritePath=/api/chat/(?<segment>.*), /${segment} # Remove /api/chat from path


        # NEW: Route for Team Service
        - id: team-service
          uri: lb://TEAM-SERVICE # 'lb://' indicates load balancing via Eureka
          predicates:
            - Path=/teams/** # All requests starting with /teams/ will go to TEAM-SERVICE
          filters:
            - RewritePath=/teams/(?<segment>.*), /${segment}




eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # Address of your Eureka Server
  instance:
    hostname: localhost